10/28/18:
looking at total biomass, the empirical sd (actually MAD) of biomass resids for both arith and larith scale with the predicted values:

> a = cut(pra, breaks = c(-Inf, 10, 20, 40, 60, 80, 100, 120, 150, 200, 250, Inf))
> df = data.frame(res = resa, group = a)
> df %>% group_by(group) %>% summarize(mad_res = mad(res))
# A tibble: 11 x 2
   group      mad_res
   <fct>        <dbl>
 1 (-Inf,10]     1.55
 2 (10,20]       9.44
 3 (20,40]      16.0 
 4 (40,60]      23.0 
 5 (60,80]      29.1 
 6 (80,100]     30.9 
 7 (100,120]    35.2 
 8 (120,150]    44.6 
 9 (150,200]    65.7 
10 (200,250]    81.7 
11 (250, Inf]   85.0 
> 
> l = cut(prl, breaks = c(-Inf, 10, 20, 40, 60, 80, 100, 120, 150, 200, 250, Inf))
> df = data.frame(res = resl, group = l)
> df %>% group_by(group) %>% summarize(mad_res = mad(res))
# A tibble: 11 x 2
   group      mad_res
   <fct>        <dbl>
 1 (-Inf,10]     1.57
 2 (10,20]      10.4 
 3 (20,40]      17.8 
 4 (40,60]      23.8 
 5 (60,80]      28.0 
 6 (80,100]     31.3 
 7 (100,120]    35.5 
 8 (120,150]    45.2 
 9 (150,200]    72.8 
10 (200,250]    74.9 
11 (250, Inf]   78.9 

This is consistent with pattern of how sd(preds) in final product scale with pt estimates except that the final sds are smaller than the sd of resids. Not surprising as the final sds should be for the unknown function not the observed values.

May want to run arith fit for biomass just to see what the sd vs point relationship looks like.

With preds for density, for larith, there is linear increase (as with biomass) in sd vs point estimate. With arith, there is linear increase to start and then no relationship of sd to point estimate

When I look at empirical variation in residuals, that does seem to flatten off somewhat, but the pattern does match the mn vs sd pattern of fitted larith model than arith model. The sd rises more quickly for arith at beginning before totally flattening off.

> a = cut(pra, breaks = c(-Inf, 10, 20, 40, 60, 80, 100, 120, 150, 200, 250, 300, Inf))
> df = data.frame(res = resa, group = a)
> df %>% group_by(group) %>% summarize(mad_res = mad(res))
# A tibble: 12 x 2
   group      mad_res
   <fct>        <dbl>
 1 (-Inf,10]     1.62
 2 (10,20]      11.3 
 3 (20,40]      19.0 
 4 (40,60]      24.1 
 5 (60,80]      37.6 
 6 (80,100]     40.0 
 7 (100,120]    55.8 
 8 (120,150]    52.4 
 9 (150,200]    59.4 
10 (200,250]    63.0 
11 (250,300]    78.5 
12 (300, Inf]  107.  
> l = cut(prl, breaks = c(-Inf, 10, 20, 40, 60, 80, 100, 120, 150, 200, 250, 300, Inf))
> df = data.frame(res = resl, group = l)
> df %>% group_by(group) %>% summarize(mad_res = mad(res))
# A tibble: 12 x 2
   group      mad_res
   <fct>        <dbl>
 1 (-Inf,10]     1.48
 2 (10,20]      13.0 
 3 (20,40]      17.9 
 4 (40,60]      28.9 
 5 (60,80]      38.1 
 6 (80,100]     47.6 
 7 (100,120]    57.6 
 8 (120,150]    54.2 
 9 (150,200]    60.0 
10 (200,250]    64.7 
11 (250,300]    78.1 
12 (300, Inf]  104.  


10/25/18:
unc for arith fit for density is much lower and smoother than for logArith fit. SEs are around 15-40 and seem like they are probably too low

not exactly clear how to assess coverage given data have noise in them - perhaps simulate draws from pot model with error and sample number points_occ from relevant binomial distribution as well

I suppose that for a cell with many high density values the error variance is higher than for a cell with low values because each point with high density could be somewhat different if the two trees were at slightly different distances because having close trees leads to less stable estimates. So probably makes sense to use log scale with inherent heteroscedasticity built in.

For FIA which uses counts of trees in fixed area, this is not really the case, I don't think. So maybe ok to use arith there.

10/24/18:

total density CV:
k_occ=3500 a bit better than 2500 but just using 2500 for computational simplicity
log_arith is better

taxon density CV:
arith is better! well for most taxa; for oak logArith better
k_pot of 2500 and 3500 about the same; k_occ of 2500 is best (didn't compute 3000 or 3500)

i=i+1
critArith[i,,]
critLogArith[i,,]

10/22/18:
taxon biomass CV:
logArith better than arith
summing over all taxa, 2500/3500 is best, so don't know if even larger k would be better

for most taxa, using 2500/2000 makes little difference, but big diff for oak/pine

options:
1) try even higher k in cv to see if k_occ 3000,3500 better and if k_pot 4000 better
2) use 2500/3500 given that is best as far as known


10/20/18:
test of k_occ=2500, k_pot=3500 for total shows that edf is well below these values; not entirely clear why CV indicates that 3000/3500 is best.

for critLogArith, CV indicates 3000/3500 and that is better than critArith
if look at arith vs logarith with 2500/3500, various metrics of comparing CV fits all suggest logArith better; also logArith biased low by about 3.6 while Arith biased high by about 3.7

did CV up to 3500 for pot/occ for total
only up to 2500 for occ for taxon

8/7/18:
the bam weird fits for beech seem to disappear if use fREML (default) and not GCV.Cp

given anomalies in gam fit, at moment plan to use bam

note that bam sometimes gives warnings about 0/1 values or lack of convergence but I think this occurs at the end of the fitting

current tweak to eliminate weird occ draws is

                draws_logocc[pred_occ < 0.001 & pred_occ_se < 0.001] <- -Inf

catches most but not all anomalies

with bam/fREML the sd outliers seem to all occur where occ is zero (outside range boundary)

7/26/18:
bam with k=1500 for density is showing no point est weirdness but a few boundary effects (though not terrible) and very weird fits for beech/hemlock

7/25/18:
density at taxon-level has anomalies even in point predictions for occ.
Changing to bam with k = 1500 or 2500 for birch seems to eliminate those

using gam with smaller k doesn't get rid of the anomalies

current ad hoc tweak to eliminate weird draw values in occ doesn't seem to catch all cases:
                draws_logocc[pred_occ < 0.0001 & pred_occ_se < 0.0001] <- -Inf  
                draws_logocc[pred_occ > 0.999] <- 0 


7/20/18:
high density total in NW UP MI seems legit based on data - bunch of points with two trees pretty close

7/19/18:

both biomass and density for taxon-level have some crazy outlying draw
values that result in very high sd values, often on boundary but not
always (note oak crazy values just because the variability in the linpred
draws is very high)

perhaps 2500 too high given only 11k data points, though we do see a
lot of small scale spatial variability in occupancy

7/17/18:
more on hotspots: hotspots.Rda has info on UP hotspot and two LP hot spots

UP hotspot: cells 15481-3: very big trees (2-4 feet diam)
northern LP hotspot: cells 23217,22921-2: density seems wrong - diameters very close to 0 - in this hotspot and a few other locations in soMI, including some points in far SE, both diams <1 for large proportion of points
240 such points in dataset of which ~150 are in 4 cells in this hotspot
central LP hotspot: cells 27652-27654,27357-9 - seem legit
SE LP hotspot - possibly issue with SE MI data as discussed with Charlie more generally

getting crazy uncertainty in big chunk of SE MI - issue mostly with numerical issues with computation of draws_logocc, but still a bit of an issue with central MI getting draws with 0 occ in middle of data where occ=1. not sure how to address formally but it doesn't seem to affect overall biomass preds much except a downward bias of up to 50 for a swath of central MI; but it does give weird splotches of 0 biomass in central MI for individual draws

decent fix seems to be to set draw of occ to 1 when fitted occ > 0.999.

6/14/18:
cells 15480-15484 have very high predicted biomass because they have very high diameters for many trees (including y birch, spruce, pine, maple, tamarack(!))

5/29/18:
for oak, k_occ has more effect than k_pot once k_pot >= 500-1000; k_occ seemingly should be ~1000, k_pot best is 3000 k_pot of 2500 or 3500 close
(Maple): same but k_occ=1000,k_pot=3500 if using arith
but with log_arith, it wants k_occ=2500, k_pot=3500
(Basswood): arith a bit better; k_occ again has more effect; it wants k_occ of 2500, k_pot of 2500 (but very little difference for k_pot values)
(Hemlock): larith better; k_occ more effect; k_occ=2000 best; k_pot=1500 but doesn't much matter; max possible k_pot is 2000
(Pine): larith better; k_occ more effect; k_occ=2500, k_pot=2000

for total biomass, k_occ has little effect (k_occ=500 is best); k_pot maxes out at 3500 perhaps should be even larger; makes sense since occ=1 except along ecosystem boundary

fitting on log(avg) does a bit better than direct fitting to avg for oak and rather better for total biomass

larith values are lower than arith values on average

5/16/18:
geom_avg almost certainly won't work with a mix of large and small values of biomass at corners as it pulls the mean way down

given that we need to weight by counts, fitting the straight avg may be the best option and truncate negative values of pot model at 0

5/15/18:

justification for log scale fitting for potential model is to avoid negative predictions
given each cell is an average and we have the count, this suggests each observation is normal and we can account for heterosced with the count, so ignoring negative issue we could fit on original scale possibly

for biomass, when there is a value it will often be high, except for one-tree points

want to do evaluation probably in terms of MSE for actual biomass, but don't want outlying raw data to have too much weight. Weighting by count should help here. 

5/15/18:

based on fitting oak stem density pot model, it seems we need at least 500 df for pot. May need > 1000 for occ model.

4/25/18:
there are patches in far SE MI and just N of north lobe of Big Woods where all or most points have diam recorded as 0

red blotch in middle of UP - seems legit - patch with some big trees and in some cases fairly dense; note that a few large trees can really pull up the values in a cell

there is a fairly sharp boundary in tree size in going from MI_44 to MI_45 e.g. within cell 15186 - south of boundary is big trees and north is not (and L1 abbrevs change from lower case to upper case so perhaps a surveyor issue), but then MI_43 also seems big

4/18/18:

all cases we have of 2nd tree as water are in MN; in other places we don't have things recorded as whether each tree is water; in IN/IL if any trees then don't note as water

3/23/18:

see various issues in PLS_products repo

3/17/18:
1-tree/no-tree issue - see "no tree/no data issue" email 12/18/14 and "treed points" email 8/15/15

could Charlie suggest an area within which we think there is one tree such that we can give low estimate of density there; should we just call it 0 density even for the taxon present?

remove: 'Water' or 'No data'
0 tree points: 'No tree' as L1_tree1
1 tree points: NA as tree2 info where L1_tree1 is not 'No tree'

note that a fair number of 1-tree points have 0 distance to first tree

should water be treed as absent or as no tree; i.e. should our biomass be conditioal on no water or average over no water; I think probably throw out water as if near water, should likely be able to find trees and get an estimate

should we be doing things like screening out line trees in the PLS_products?

3/2/18: top row of indiana seems to overlap bottom row of michigan
same for top of illinois and bottom of umw
so mi and umw seem to line up well

Jody said she would address this.

3/2/18
so mi 1.2 and umw 1.0 seem to line up well

